package fon.rs.np.RentACarKlijentMaven.form;

import fon.rs.np.RentACarZajednickiMaven.domen.StatusVozila;
import fon.rs.np.RentACarZajednickiMaven.domen.StavkaRacuna;
import java.sql.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;
import fon.rs.np.RentACarKlijentMaven.kontroler.Kontroler;
import fon.rs.np.RentACarKlijentMaven.tabele.ModelTabeleStavkaRacuna;
import fon.rs.np.RentACarZajednickiMaven.transfer.Odgovor;

/**
 * Klasa predstavlja formu za vraćanje iznajmljenih vozila.
 * 
 * @author Boris Zivanovic
 */

public class VratiKolaForma extends javax.swing.JDialog {
	/**
	 * model tabele stavki racuna
	 */
    ModelTabeleStavkaRacuna mti;

    /**
     * Konstruktor klase VratiKolaForma.
     *
     * @param parent roditeljski frejm
     * @param modal  modalnost forme
     */
    
    public VratiKolaForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblIznajmljeni = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtRentId = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnVratiVozilo = new javax.swing.JButton();
        txtRegistracija = new javax.swing.JTextField();
        txtKorisnik = new javax.swing.JTextField();
        txtDatumVracanja = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        tblIznajmljeni.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblIznajmljeni.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblIznajmljeniMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblIznajmljeni);

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Registracija");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Rent id");

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Datum vraćanja");

        txtRentId.setEditable(false);

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Korisnik");

        btnVratiVozilo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnVratiVozilo.setText("Vrati vozilo");
        btnVratiVozilo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVratiVoziloActionPerformed(evt);
            }
        });

        txtRegistracija.setEditable(false);

        txtKorisnik.setEditable(false);

        txtDatumVracanja.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(btnVratiVozilo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtRentId, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(txtRegistracija, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(txtKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel8)
                                .addGap(94, 94, 94)
                                .addComponent(jLabel7)
                                .addGap(87, 87, 87)
                                .addComponent(jLabel10)))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(txtDatumVracanja, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatumVracanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRegistracija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(btnVratiVozilo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metoda koja se poziva prilikom klika na dugme "Vrati vozilo".
     *
     * @param evt događaj koji je pokrenuo akciju
     */
    
    private void btnVratiVoziloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVratiVoziloActionPerformed
    	 // Provera da li je selektovana neka stavka iz tabele
    	if (tblIznajmljeni.getSelectedRow() != -1) {
            System.out.println("Aaa");
         // Dobijanje selektovane stavke iz tabele
            StavkaRacuna sr = mti.vrati(tblIznajmljeni.getSelectedRow());
            System.out.println(sr.getVozilo().getKategorijaVozila());
            // Provera da li je datum vraćanja iznajmljivanja pre isteka
            if (sr.getIznajmljivanje().getDatumVracanja().after(Date.valueOf(LocalDate.now()))) {
            	// Ako je datum pre isteka, prikazuje se dijalog za potvrdu vraćanja vozila
            	int rez = JOptionPane.showConfirmDialog(this, "Datum je pre isteka, da li ste sigurni da zelite da vratite?");
                if (rez == JOptionPane.YES_OPTION) {
                	// Ako korisnik potvrdi vraćanje, poziva se metoda za vraćanje vozila
                	vratiVozilo(sr);
                    reset();
                }
            } else {
            	// Ako je datum istekao, odmah se poziva metoda za vraćanje vozila
                vratiVozilo(sr);
                reset();
            }
        } else
            JOptionPane.showMessageDialog(this, "Molimo izaberite vozilo koje zelite da vratite");
    }//GEN-LAST:event_btnVratiVoziloActionPerformed

    /**
     * Metoda koja se poziva prilikom klika na tabelu sa iznajmljenim vozilima.
     *
     * @param evt događaj koji je pokrenuo akciju
     */
    
    private void tblIznajmljeniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblIznajmljeniMouseClicked
    	// Provera da li je selektovana neka stavka iz tabele
    	if (tblIznajmljeni.getSelectedRow() != -1) {
    		// Dobijanje selektovane stavke iz tabele
    		StavkaRacuna sr = mti.vrati(tblIznajmljeni.getSelectedRow());
    		// Popunjavanje polja sa informacijama o selektovanoj stavki
    		txtRentId.setText("" + sr.getRbStavke());
            txtRegistracija.setText(sr.getVozilo().getRegistarskiBroj());
            txtKorisnik.setText(sr.getKorisnik().toString());
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            txtDatumVracanja.setText(df.format(sr.getIznajmljivanje().getDatumVracanja()));
        }
    }//GEN-LAST:event_tblIznajmljeniMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVratiVozilo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblIznajmljeni;
    private javax.swing.JTextField txtDatumVracanja;
    private javax.swing.JTextField txtKorisnik;
    private javax.swing.JTextField txtRegistracija;
    private javax.swing.JTextField txtRentId;
    // End of variables declaration//GEN-END:variables

    private void populate() {
        List<StavkaRacuna> iznajmljena = Kontroler.getInstance().vratiIznajmljeno(new StavkaRacuna());
        mti = new ModelTabeleStavkaRacuna(iznajmljena);
        tblIznajmljeni.setModel(mti);
    }

    private void vratiVozilo(StavkaRacuna sr) {
        sr.getVozilo().setStatusVozila(StatusVozila.SLOBODNO);
        Odgovor o = Kontroler.getInstance().izmeniVozilo(sr.getVozilo());
        if (o.isUspesno()) {
            mti.izbaci(tblIznajmljeni.getSelectedRow());
            Kontroler.getInstance().getGf().azurirajVrati(sr.getVozilo());
        } else {
            JOptionPane.showMessageDialog(this, o.getPoruka());
        }
    }

    private void reset() {
        txtDatumVracanja.setText("");
        txtKorisnik.setText("");
        txtRegistracija.setText("");
        txtRentId.setText("");
    }
}
